Assign3: Due 11:59PM October 30th

Rod cutting problem is a dynamic programming problem. Assume prices for various sizes of rods are given,
for example price for 1", 2", 3", 4",... Given a length of a rod (say 10") we want to find the maximum
price we can get, either by selling the rod as is or by cutting it into various pieces.

If price(length) is the price for a given length, then

maxPriceFor(length) = max(price(length),  maxPriceFor(1) + maxPriceFor(length - 1), maxPriceFor(2) + maxPriceFor(length - 2), ...).

The maximum price for a length is the maximum of the maximum price for cut rods.

Implement this recursive algorithm first. Measure the time for some significant rod length.

Then implement this algorithm using memoization. Measure the time for this solution.

No mutability in both cases. 

Implement both versions using two different languages, one dynamically typed and the other statically typed. Do not use Java, C/C++, C#, Python, or JavaScript.

Create build files, write unit tests.

Ask for frequent reviews.

Total [100]: 98

Language 1: Scala
Recursive Solution [10]:
Memoized Solution [30]:
Timed Test [10]:

Language 2: Ruby
Recursive Solution [10]:
Memoized Solution [30]: -2
Give blank line between parts.
perform return max_prices if max_prices[length] before other checks or code.

Timed Test [10]:
